{"components":{"schemas":{"AccountAddressesResponse":{"example":{"hopr":"12D3KooWJmLm8FnBfvYQ5BAZ5qcYBxQFFBzAAEYUBUNJNE8cRsYS","native":"0x07eaf07d6624f741e04f4092a755a9027aaab7f6"},"properties":{"hopr":{"type":"string"},"native":{"type":"string"}},"required":["native","hopr"],"type":"object"},"AccountBalancesResponse":{"example":{"hopr":"2000000000000000000000","native":"9999563581204904000","safeHopr":"2000000000000000000000","safeHoprAllowance":"115792089237316195423570985008687907853269984665640564039457584007913129639935","safeNative":"10000000000000000000"},"properties":{"hopr":{"type":"string"},"native":{"type":"string"},"safeHopr":{"type":"string"},"safeHoprAllowance":{"type":"string"},"safeNative":{"type":"string"}},"required":["safeNative","native","safeHopr","hopr","safeHoprAllowance"],"type":"object"},"AliasPeerIdBodyRequest":{"example":{"alias":"Alice","peerId":"12D3KooWRWeTozREYHzWTbuCYskdYhED1MXpDwTrmccwzFrd2mEA"},"properties":{"alias":{"type":"string"},"peerId":{"type":"string"}},"required":["alias","peerId"],"type":"object"},"AnnouncedPeer":{"properties":{"multiaddr":{"nullable":true,"type":"string"},"peerAddress":{"type":"string"},"peerId":{"type":"string"}},"required":["peerId","peerAddress"],"type":"object"},"ApiError":{"example":{"error":"Invalid value passed in parameter 'XYZ'","status":"INVALID_INPUT"},"properties":{"error":{"nullable":true,"type":"string"},"status":{"type":"string"}},"required":["status"],"type":"object"},"ChannelInfoResponse":{"example":{"balance":"10000000000000000000","channelEpoch":1,"channelId":"0x04efc1481d3f106b88527b3844ba40042b823218a9cd29d1aa11c2c2ef8f538f","closureTime":0,"destinationAddress":"0x188c4462b75e46f0c7262d7f48d182447b93a93c","destinationPeerId":"12D3KooWPWD5P5ZzMRDckgfVaicY5JNoo7JywGotoAv17d7iKx1z","sourceAddress":"0x07eaf07d6624f741e04f4092a755a9027aaab7f6","sourcePeerId":"12D3KooWJmLm8FnBfvYQ5BAZ5qcYBxQFFBzAAEYUBUNJNE8cRsYS","status":"Open","ticketIndex":0},"properties":{"balance":{"type":"string"},"channelEpoch":{"format":"int32","minimum":0,"type":"integer"},"channelId":{"type":"string"},"closureTime":{"format":"int64","minimum":0,"type":"integer"},"destinationAddress":{"type":"string"},"destinationPeerId":{"type":"string"},"sourceAddress":{"type":"string"},"sourcePeerId":{"type":"string"},"status":{"type":"string"},"ticketIndex":{"format":"int32","minimum":0,"type":"integer"}},"required":["channelId","sourceAddress","destinationAddress","sourcePeerId","destinationPeerId","balance","status","ticketIndex","channelEpoch","closureTime"],"type":"object"},"ChannelTicket":{"example":{"amount":"100","channelEpoch":1,"channelId":"0x04efc1481d3f106b88527b3844ba40042b823218a9cd29d1aa11c2c2ef8f538f","index":0,"indexOffset":1,"signature":"0xe445fcf4e90d25fe3c9199ccfaff85e23ecce8773304d85e7120f1f38787f2329822470487a37f1b5408c8c0b73e874ee9f7594a632713b6096e616857999891","winProb":"1"},"properties":{"amount":{"type":"string"},"channelEpoch":{"format":"int32","minimum":0,"type":"integer"},"channelId":{"type":"string"},"index":{"format":"int64","minimum":0,"type":"integer"},"indexOffset":{"format":"int32","minimum":0,"type":"integer"},"signature":{"type":"string"},"winProb":{"type":"string"}},"required":["channelId","amount","index","indexOffset","winProb","channelEpoch","signature"],"type":"object"},"ChannelsQueryRequest":{"description":"Parameters for enumerating channels.","properties":{"fullTopology":{"default":false,"description":"Should all channels (not only the ones concerning this node) be enumerated?","type":"boolean"},"includingClosed":{"default":false,"description":"Should be the closed channels included?","type":"boolean"}},"type":"object"},"CloseChannelResponse":{"example":{"channelStatus":"PendingToClose","receipt":"0xd77da7c1821249e663dead1464d185c03223d9663a06bc1d46ed0ad449a07118"},"properties":{"channelStatus":{"description":"New status of the channel. Will be one of `Closed` or `PendingToClose`.","type":"string"},"receipt":{"description":"Receipt for the channel close transaction.","type":"string"}},"required":["receipt","channelStatus"],"type":"object"},"EntryNode":{"properties":{"isEligible":{"type":"boolean"},"multiaddrs":{"items":{"type":"string"},"type":"array"}},"required":["multiaddrs","isEligible"],"type":"object"},"FundBodyRequest":{"description":"Specifies the amount of HOPR tokens to fund a channel with.","example":{"amount":"1000"},"properties":{"amount":{"description":"Amount of HOPR tokens to fund the channel with.","type":"string"}},"required":["amount"],"type":"object"},"GetMessageBodyRequest":{"properties":{"tag":{"description":"The message tag used to filter messages based on application","format":"int32","minimum":0,"nullable":true,"type":"integer"},"timestamp":{"description":"Timestamp to filter messages received after this timestamp","format":"int64","minimum":0,"type":"integer"}},"type":"object"},"HeartbeatInfo":{"properties":{"sent":{"format":"int64","minimum":0,"type":"integer"},"success":{"format":"int64","minimum":0,"type":"integer"}},"required":["sent","success"],"type":"object"},"MessagePopAllResponse":{"properties":{"messages":{"items":{"$ref":"#/components/schemas/MessagePopResponse"},"type":"array"}},"required":["messages"],"type":"object"},"MessagePopResponse":{"example":{"body":"Test message 1","receivedAt":1704453953073,"tag":20},"properties":{"body":{"type":"string"},"receivedAt":{"format":"int64","minimum":0,"type":"integer"},"tag":{"format":"int32","minimum":0,"type":"integer"}},"required":["tag","body","receivedAt"],"type":"object"},"NodeChannel":{"properties":{"balance":{"type":"string"},"id":{"type":"string"},"peerAddress":{"type":"string"},"status":{"type":"string"}},"required":["id","peerAddress","status","balance"],"type":"object"},"NodeChannelsResponse":{"description":"Listing of channels.","example":{"all":[],"incoming":[],"outgoing":[{"balance":"10000000000000000010","id":"0x04efc1481d3f106b88527b3844ba40042b823218a9cd29d1aa11c2c2ef8f538f","peerAddress":"0x188c4462b75e46f0c7262d7f48d182447b93a93c","status":"Open"}]},"properties":{"all":{"description":"Complete channel topology as seen by this node.","items":{"$ref":"#/components/schemas/ChannelInfoResponse"},"type":"array"},"incoming":{"description":"Channels incoming to this node.","items":{"$ref":"#/components/schemas/NodeChannel"},"type":"array"},"outgoing":{"description":"Channels outgoing from this node.","items":{"$ref":"#/components/schemas/NodeChannel"},"type":"array"}},"required":["incoming","outgoing","all"],"type":"object"},"NodeInfoResponse":{"example":{"announcedAddress":["/ip4/10.0.2.100/tcp/19092"],"chain":"anvil-localhost","channelClosurePeriod":15,"connectivityStatus":"Green","hoprChannels":"0x9a9f2ccfde556a7e9ff0848998aa4a0cfd8863ae","hoprManagementModule":"0xa51c1fc2f0d1a1b8494ed1fe312d7c3a78ed91c0","hoprNetworkRegistry":"0x3aa5ebb10dc797cac828524e59a333d0a371443c","hoprNodeSafe":"0x42bc901b1d040f984ed626eff550718498a6798a","hoprNodeSageRegistry":"0x0dcd1bf9a1b36ce34237eeafef220932846bcd82","hoprToken":"0x9a676e781a523b5d0c0e43731313a708cb607508","indexBlockPrevChecksum":123450,"indexerBlock":123456,"indexerChecksum":"cfde556a7e9ff0848998aa4a9a9f2ccfde556a7e9ff0848998aa4a0cfd8863ae","isEligible":true,"listeningAddress":["/ip4/10.0.2.100/tcp/19092"],"network":"anvil-localhost"},"properties":{"announcedAddress":{"items":{"type":"string"},"type":"array"},"chain":{"type":"string"},"channelClosurePeriod":{"description":"Channel closure period in seconds","format":"int64","minimum":0,"type":"integer"},"connectivityStatus":{"type":"string"},"hoprChannels":{"type":"string"},"hoprManagementModule":{"type":"string"},"hoprNetworkRegistry":{"type":"string"},"hoprNodeSafe":{"type":"string"},"hoprNodeSafeRegistry":{"type":"string"},"hoprToken":{"type":"string"},"indexBlockPrevChecksum":{"format":"int32","minimum":0,"type":"integer"},"indexerBlock":{"format":"int32","minimum":0,"type":"integer"},"indexerChecksum":{"type":"string"},"isEligible":{"type":"boolean"},"listeningAddress":{"items":{"type":"string"},"type":"array"},"network":{"type":"string"}},"required":["network","announcedAddress","listeningAddress","chain","hoprToken","hoprChannels","hoprNetworkRegistry","hoprNodeSafeRegistry","hoprManagementModule","hoprNodeSafe","isEligible","connectivityStatus","channelClosurePeriod","indexerBlock","indexerChecksum","indexBlockPrevChecksum"],"type":"object"},"NodePeerInfoResponse":{"example":{"announced":["/ip4/10.0.2.100/tcp/19093"],"observed":["/ip4/10.0.2.100/tcp/19093"]},"properties":{"announced":{"items":{"type":"string"},"type":"array"},"observed":{"items":{"type":"string"},"type":"array"}},"required":["announced","observed"],"type":"object"},"NodePeersQueryRequest":{"properties":{"quality":{"format":"double","nullable":true,"type":"number"}},"type":"object"},"NodePeersResponse":{"properties":{"announced":{"items":{"$ref":"#/components/schemas/AnnouncedPeer"},"type":"array"},"connected":{"items":{"$ref":"#/components/schemas/PeerInfo"},"type":"array"}},"required":["connected","announced"],"type":"object"},"NodeTicketStatisticsResponse":{"example":{"neglectedValue":"0","redeemedValue":"100","rejectedValue":"0","unredeemedValue":"200","winning_count":"0"},"properties":{"neglectedValue":{"type":"string"},"redeemedValue":{"type":"string"},"rejectedValue":{"type":"string"},"unredeemedValue":{"type":"string"},"winningCount":{"format":"int64","minimum":0,"type":"integer"}},"required":["winningCount","unredeemedValue","redeemedValue","neglectedValue","rejectedValue"],"type":"object"},"NodeVersionResponse":{"example":{"version":"2.1.0"},"properties":{"version":{"type":"string"}},"required":["version"],"type":"object"},"OpenChannelBodyRequest":{"example":{"amount":"10","peerAddress":"0xa8194d36e322592d4c707b70dbe96121f5c74c64"},"properties":{"amount":{"description":"Initial amount of stake in HOPR tokens.","type":"string"},"peerAddress":{"description":"On-chain address of the counterparty.","type":"string"}},"required":["peerAddress","amount"],"type":"object"},"OpenChannelResponse":{"example":{"channelId":"0x04efc1481d3f106b88527b3844ba40042b823218a9cd29d1aa11c2c2ef8f538f","transactionReceipt":"0x5181ac24759b8e01b3c932e4636c3852f386d17517a8dfc640a5ba6f2258f29c"},"properties":{"channelId":{"description":"ID of the new channel.","type":"string"},"transactionReceipt":{"description":"Receipt of the channel open transaction.","type":"string"}},"required":["channelId","transactionReceipt"],"type":"object"},"PeerIdResponse":{"example":{"peerId":"12D3KooWRWeTozREYHzWTbuCYskdYhED1MXpDwTrmccwzFrd2mEA"},"properties":{"peerId":{"type":"string"}},"required":["peerId"],"type":"object"},"PeerInfo":{"properties":{"backoff":{"format":"double","type":"number"},"heartbeats":{"$ref":"#/components/schemas/HeartbeatInfo"},"isNew":{"type":"boolean"},"lastSeen":{"minimum":0,"type":"integer"},"lastSeenLatency":{"minimum":0,"type":"integer"},"multiaddr":{"nullable":true,"type":"string"},"peerAddress":{"nullable":true,"type":"string"},"peerId":{"type":"string"},"quality":{"format":"double","type":"number"},"reportedVersion":{"type":"string"}},"required":["peerId","heartbeats","lastSeen","lastSeenLatency","quality","backoff","isNew","reportedVersion"],"type":"object"},"PingResponse":{"example":{"latency":200,"reportedVersion":"2.1.0"},"properties":{"latency":{"format":"int64","minimum":0,"type":"integer"},"reportedVersion":{"type":"string"}},"required":["latency","reportedVersion"],"type":"object"},"SendMessageBodyRequest":{"example":{"body":"Test message","hops":1,"path":["12D3KooWR4uwjKCDCAY1xsEFB4esuWLF9Q5ijYvCjz5PNkTbnu33"],"peerId":"12D3KooWEDc1vGJevww48trVDDf6pr1f6N3F86sGJfQrKCyc8kJ1","tag":20},"properties":{"body":{"description":"Message to be transmitted over the network","format":"binary","type":"string"},"hops":{"format":"int32","minimum":0,"nullable":true,"type":"integer"},"path":{"items":{"type":"string"},"nullable":true,"type":"array"},"peerId":{"description":"The recipient HOPR PeerId","type":"string"},"tag":{"description":"The message tag used to filter messages based on application","format":"int32","minimum":0,"type":"integer"}},"required":["tag","body","peerId"],"type":"object"},"SendMessageResponse":{"example":{"challenge":"031916ee5bfc0493f40c353a670fc586a3a28f9fce9cd065ff9d1cbef19b46eeba"},"properties":{"challenge":{"type":"string"},"timestamp":{"format":"int64","minimum":0,"type":"integer"}},"required":["challenge","timestamp"],"type":"object"},"SizeResponse":{"properties":{"size":{"minimum":0,"type":"integer"}},"required":["size"],"type":"object"},"TagQueryRequest":{"properties":{"tag":{"format":"int32","minimum":0,"nullable":true,"type":"integer"}},"type":"object"},"TicketPriceResponse":{"properties":{"price":{"description":"Price of the ticket in HOPR tokens.","type":"string"}},"required":["price"],"type":"object"},"WithdrawBodyRequest":{"example":{"address":"0xb4ce7e6e36ac8b01a974725d5ba730af2b156fbe","amount":20000,"currency":"HOPR"},"properties":{"address":{"type":"string"},"amount":{"type":"string"},"currency":{"type":"string"}},"required":["currency","amount","address"],"type":"object"}},"securitySchemes":{"api_token":{"in":"header","name":"X-Auth-Token","type":"apiKey"},"bearer_token":{"bearerFormat":"token","scheme":"bearer","type":"http"}}},"info":{"contact":{"email":"tech@hoprnet.org","name":"HOPR Association"},"description":"This Rest API enables developers to interact with a hoprd node programatically through HTTP.","license":{"name":"GPL-3.0-only"},"title":"hoprd-api","version":"3.1.0"},"openapi":"3.0.3","paths":{"/api/v3/account/addresses":{"get":{"description":"Get node's HOPR and native addresses.\n\nHOPR address is represented by the P2P PeerId and can be used by other node owner to interact with this node.","operationId":"addresses","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountAddressesResponse"}}},"description":"The node's public addresses"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Get node's HOPR and native addresses.","tags":["Account"]}},"/api/v3/account/balances":{"get":{"description":"Get node's and associated Safe's HOPR and native balances as the allowance for HOPR\ntokens to be drawn by HoprChannels from Safe.\n\nHOPR tokens from the Safe balance are used to fund the payment channels between this\nnode and other nodes on the network.\nNATIVE balance of the Node is used to pay for the gas fees for the blockchain.","operationId":"balances","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountBalancesResponse"}}},"description":"The node's HOPR and Safe balances"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Get node's and associated Safe's HOPR and native balances as the allowance for HOPR","tags":["Account"]}},"/api/v3/account/withdraw":{"post":{"description":"Withdraw funds from this node to the ethereum wallet address.\n\nBoth NATIVE or HOPR can be withdrawn using this method.","operationId":"withdraw","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WithdrawBodyRequest"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountBalancesResponse"}}},"description":"The node's funds have been withdrawn"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Withdraw funds from this node to the ethereum wallet address.","tags":["Account"]}},"/api/v3/aliases":{"get":{"description":"Get each previously set alias and its corresponding PeerId.","operationId":"aliases","responses":{"200":{"content":{"application/json":{"example":{"alice":"12D3KooWPWD5P5ZzMRDckgfVaicY5JNoo7JywGotoAv17d7iKx1z","me":"12D3KooWJmLm8FnBfvYQ5BAZ5qcYBxQFFBzAAEYUBUNJNE8cRsYS"},"schema":{"additionalProperties":{"type":"string"},"type":"object"}}},"description":"Each alias with its corresponding PeerId"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Get each previously set alias and its corresponding PeerId.","tags":["Alias"]},"post":{"description":"Set alias for a peer with a specific PeerId.","operationId":"set_alias","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AliasPeerIdBodyRequest"}}},"description":"Alias name along with the PeerId to be aliased","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PeerIdResponse"}}},"description":"Alias set successfully."},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid PeerId: The format or length of the peerId is incorrect."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"409":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Given PeerId is already aliased."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Set alias for a peer with a specific PeerId.","tags":["Alias"]}},"/api/v3/aliases/{alias}":{"delete":{"description":"Delete an alias.","operationId":"delete_alias","parameters":[{"description":"Alias to be shown","in":"path","name":"alias","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Alias removed successfully"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Delete an alias.","tags":["Alias"]},"get":{"description":"Get alias for the PeerId (Hopr address) that have this alias assigned to it.","operationId":"get_alias","parameters":[{"description":"Alias to be shown","in":"path","name":"alias","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PeerIdResponse"}}},"description":"Get PeerId for an alias"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"PeerId not found"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Get alias for the PeerId (Hopr address) that have this alias assigned to it.","tags":["Alias"]}},"/api/v3/channels":{"get":{"description":"Lists channels opened to/from this node. Alternatively, it can print all\nthe channels in the network as this node sees them.","operationId":"list_channels","parameters":[{"description":"Should be the closed channels included?","in":"query","name":"includingClosed","required":false,"schema":{"type":"boolean"}},{"description":"Should all channels (not only the ones concerning this node) be enumerated?","in":"query","name":"fullTopology","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NodeChannelsResponse"}}},"description":"Channels fetched successfully"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Lists channels opened to/from this node. Alternatively, it can print all","tags":["Channels"]},"post":{"description":"Opens a channel to the given on-chain address with the given initial stake of HOPR tokens.","operationId":"open_channel","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OpenChannelBodyRequest"}}},"description":"Open channel request specification: on-chain address of the counterparty and the initial HOPR token stake.","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OpenChannelResponse"}}},"description":"Channel successfully opened."},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid counterparty address or stake amount."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Failed to open the channel because of insufficient HOPR balance or allowance."},"409":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Failed to open the channel because the channel between this nodes already exists."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Opens a channel to the given on-chain address with the given initial stake of HOPR tokens.","tags":["Channels"]}},"/api/v3/channels/{channelId}":{"delete":{"description":"Closes the given channel.\n\nIf the channel is currently `Open`, it will transition it to `PendingToClose`.\nIf the channels is in `PendingToClose` and the channel closure period has elapsed,\nit will transition it to `Closed`.","operationId":"close_channel","parameters":[{"description":"ID of the channel.","in":"path","name":"channelId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CloseChannelResponse"}}},"description":"Channel closed successfully"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid channel id."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Channel not found."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Closes the given channel.","tags":["Channels"]},"get":{"description":"Returns information about the given channel.","operationId":"show_channel","parameters":[{"description":"ID of the channel.","in":"path","name":"channelId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChannelInfoResponse"}}},"description":"Channel fetched successfully"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid channel id."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Channel not found."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Returns information about the given channel.","tags":["Channels"]}},"/api/v3/channels/{channelId}/fund":{"post":{"description":"Funds the given channel with the given amount of HOPR tokens.","operationId":"fund_channel","parameters":[{"description":"ID of the channel.","in":"path","name":"channelId","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FundBodyRequest"}}},"description":"Specifies the amount of HOPR tokens to fund a channel with.","required":true},"responses":{"200":{"content":{"text/plain":{"schema":{"type":"string"}}},"description":"Channel funded successfully"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid channel id."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Failed to fund the channel because of insufficient HOPR balance or allowance."},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Channel not found."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Funds the given channel with the given amount of HOPR tokens.","tags":["Channels"]}},"/api/v3/channels/{channelId}/tickets":{"get":{"description":"Lists all tickets for the given channel  ID.","operationId":"show_channel_tickets","parameters":[{"description":"ID of the channel.","in":"path","name":"channelId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ChannelTicket"},"type":"array"}}},"description":"Fetched all tickets for the given channel ID"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid channel id."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Channel not found."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Lists all tickets for the given channel  ID.","tags":["Channels"]}},"/api/v3/channels/{channelId}/tickets/aggregate":{"post":{"description":"Starts aggregation of tickets in the given channel.","operationId":"aggregate_tickets_in_channel","parameters":[{"description":"ID of the channel.","in":"path","name":"channelId","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Tickets successfully aggregated"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid channel id."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Tickets were not found for that channel. That means that no messages were sent inside this channel yet."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Starts aggregation of tickets in the given channel.","tags":["Channels"]}},"/api/v3/channels/{channelId}/tickets/redeem":{"post":{"description":"Starts redeeming all tickets in the given channel.\n\n**WARNING:** this should almost **never** be used as it can issue a large\nnumber of on-chain transactions. The tickets should almost always be aggregated first.","operationId":"redeem_tickets_in_channel","parameters":[{"description":"ID of the channel.","in":"path","name":"channelId","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Tickets redeemed successfully."},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid channel id."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Tickets were not found for that channel. That means that no messages were sent inside this channel yet."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Starts redeeming all tickets in the given channel.","tags":["Channels"]}},"/api/v3/messages":{"delete":{"description":"Delete messages from nodes message inbox.","operationId":"delete_messages","parameters":[{"in":"query","name":"tag","required":false,"schema":{"format":"int32","minimum":0,"nullable":true,"type":"integer"}}],"responses":{"204":{"description":"Messages successfully deleted."},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Bad request."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Delete messages from nodes message inbox.","tags":["Messages"]},"post":{"description":"Send a message to another peer using the given path.\n\nThe message can be sent either over a specified path or using a specified\nnumber of HOPS, if no path is given.","operationId":"send_message","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendMessageBodyRequest"}}},"description":"Body of a message to send","required":true},"responses":{"202":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendMessageResponse"}}},"description":"The message was sent successfully, DOES NOT imply successful delivery."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Send a message to another peer using the given path.","tags":["Messages"]}},"/api/v3/messages/peek":{"post":{"description":"Peek the oldest message currently present in the nodes message inbox.\n\nThe message is not removed from the inbox.","operationId":"peek","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagQueryRequest"}}},"description":"Tag of message queue to peek from","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessagePopResponse"}}},"description":"Message successfully peeked at."},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Bad request."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"404":{"description":"The specified resource was not found."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Peek the oldest message currently present in the nodes message inbox.","tags":["Messages"]}},"/api/v3/messages/peek-all":{"post":{"description":"Peek the list of messages currently present in the nodes message inbox, filtered by tag,\nand optionally by timestamp (epoch in milliseconds).\nThe messages are not removed from the inbox.","operationId":"peek_all","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetMessageBodyRequest"}}},"description":"Tag of message queue and optionally a timestamp since from to start peeking. When an empty object or an object with a `tag: 0` is provided, it fetches all the messages.","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessagePopAllResponse"}}},"description":"All messages successfully peeked at."},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Bad request."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"404":{"description":"The specified resource was not found."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Peek the list of messages currently present in the nodes message inbox, filtered by tag,","tags":["Messages"]}},"/api/v3/messages/pop":{"post":{"description":"Get the oldest message currently present in the nodes message inbox.\n\nThe message is removed from the inbox.","operationId":"pop","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagQueryRequest"}}},"description":"Tag of message queue to pop from","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessagePopResponse"}}},"description":"Message successfully extracted."},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Bad request."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"404":{"description":"The specified resource was not found."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Get the oldest message currently present in the nodes message inbox.","tags":["Messages"]}},"/api/v3/messages/pop-all":{"post":{"description":"Get the list of messages currently present in the nodes message inbox.\n\nThe messages are removed from the inbox.","operationId":"pop_all","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TagQueryRequest"}}},"description":"Tag of message queue to pop from. When an empty object or an object with a `tag: 0` is provided, it lists and removes all the messages.","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessagePopAllResponse"}}},"description":"All message successfully extracted."},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Bad request."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"404":{"description":"The specified resource was not found."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Get the list of messages currently present in the nodes message inbox.","tags":["Messages"]}},"/api/v3/messages/size":{"get":{"description":"Get size of filtered message inbox for a specific tag","operationId":"size","parameters":[{"in":"query","name":"tag","required":false,"schema":{"format":"int32","minimum":0,"nullable":true,"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SizeResponse"}}},"description":"Returns the message inbox size filtered by the given tag"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Bad request."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Get size of filtered message inbox for a specific tag","tags":["Messages"]}},"/api/v3/network/price":{"get":{"description":"Obtains the current ticket price.","operationId":"price","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TicketPriceResponse"}}},"description":"Current ticket price"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Obtains the current ticket price.","tags":["Network"]}},"/api/v3/node/configuration":{"get":{"description":"Get the configuration of the running node.","operationId":"configuration","responses":{"200":{"content":{"text/plain":{"schema":{"type":"string"}}},"description":"Fetched node configuration"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Get the configuration of the running node.","tags":["Configuration"]}},"/api/v3/node/entryNodes":{"get":{"description":"List all known entry nodes with multiaddrs and eligibility.","operationId":"entry_nodes","responses":{"200":{"content":{"application/json":{"example":{"0x188c4462b75e46f0c7262d7f48d182447b93a93c":{"isElligible":true,"multiaddrs":["/ip4/10.0.2.100/tcp/19091"]}},"schema":{"additionalProperties":{"$ref":"#/components/schemas/EntryNode"},"type":"object"}}},"description":"Fetched public nodes' information"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"List all known entry nodes with multiaddrs and eligibility.","tags":["Node"]}},"/api/v3/node/info":{"get":{"description":"Get information about this HOPR Node.","operationId":"info","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NodeInfoResponse"}}},"description":"Fetched node version"},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Get information about this HOPR Node.","tags":["Node"]}},"/api/v3/node/metrics":{"get":{"description":"Retrieve Prometheus metrics from the running node.","operationId":"metrics","responses":{"200":{"content":{"text/plain":{"schema":{"type":"string"}}},"description":"Fetched node metrics"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Retrieve Prometheus metrics from the running node.","tags":["Node"]}},"/api/v3/node/peers":{"get":{"description":"Lists information for `connected peers` and `announced peers`.\n\nConnected peers are nodes which are connected to the node while announced peers are\nnodes which have announced to the network.\n\nOptionally pass `quality` parameter to get only peers with higher or equal quality\nto the specified value.","operationId":"peers","parameters":[{"in":"query","name":"quality","required":false,"schema":{"format":"double","nullable":true,"type":"number"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NodePeersResponse"}}},"description":"Successfully returned observed peers"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Failed to extract a valid quality parameter"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Lists information for `connected peers` and `announced peers`.","tags":["Node"]}},"/api/v3/node/version":{"get":{"description":"Get release version of the running node.","operationId":"version","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NodeVersionResponse"}}},"description":"Fetched node version"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Get release version of the running node.","tags":["Node"]}},"/api/v3/peers/{peerId}":{"get":{"description":"Returns transport-related information about the given peer.\n\nThis includes the peer ids that the given peer has `announced` on-chain\nand peer ids that are actually `observed` by the transport layer.","operationId":"show_peer_info","parameters":[{"description":"PeerID of the requested peer","in":"path","name":"peerId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NodePeerInfoResponse"}}},"description":"Peer information fetched successfully."},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid peer id"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Returns transport-related information about the given peer.","tags":["Peers"]}},"/api/v3/peers/{peerId}/ping":{"post":{"description":"Directly pings the given peer.","operationId":"ping_peer","parameters":[{"description":"PeerID of the requested peer","in":"path","name":"peerId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PingResponse"}}},"description":"Ping successful"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid peer id"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Directly pings the given peer.","tags":["Peers"]}},"/api/v3/tickets":{"get":{"description":"Endpoint is deprecated and will be removed in the future. Returns an empty array.","operationId":"show_all_tickets","responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ChannelTicket"},"type":"array"}}},"description":"Fetched all tickets in all the channels"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Endpoint is deprecated and will be removed in the future. Returns an empty array.","tags":["Tickets"]}},"/api/v3/tickets/redeem":{"post":{"description":"Starts redeeming of all tickets in all channels.\n\n**WARNING:** this should almost **never** be used as it can issue a large\nnumber of on-chain transactions. The tickets should almost always be aggregated first.","operationId":"redeem_all_tickets","responses":{"204":{"description":"Tickets redeemed successfully."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Starts redeeming of all tickets in all channels.","tags":["Tickets"]}},"/api/v3/tickets/statistics":{"get":{"description":"Returns current complete statistics on tickets.","operationId":"show_ticket_statistics","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NodeTicketStatisticsResponse"}}},"description":"Tickets statistics fetched successfully. Check schema for description of every field in the statistics."},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Invalid authorization token."},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}},"description":"Unknown failure"}},"security":[{"api_token":[]},{"bearer_token":[]}],"summary":"Returns current complete statistics on tickets.","tags":["Tickets"]}},"/healthyz":{"get":{"description":"Check whether the node is healthy.","operationId":"healthyz","responses":{"200":{"description":"The node is healthy"},"412":{"description":"The node is not healthy"}},"summary":"Check whether the node is healthy.","tags":["Checks"]}},"/readyz":{"get":{"description":"Check whether the node is ready to accept connections.","operationId":"readyz","responses":{"200":{"description":"The node is ready to accept connections"},"412":{"description":"The node is not ready to accept connections"}},"summary":"Check whether the node is ready to accept connections.","tags":["Checks"]}},"/startedz":{"get":{"description":"Check whether the node is started.","operationId":"startedz","responses":{"200":{"description":"The node is stared and running"},"412":{"description":"The node is not started and running"}},"summary":"Check whether the node is started.","tags":["Checks"]}}},"tags":[{"description":"HOPR node functionality checks","name":"Checks"},{"description":"HOPR node internal non-persistent alias endpoints","name":"Alias"},{"description":"HOPR node account endpoints","name":"Account"},{"description":"HOPR node information endpoints","name":"Node"},{"description":"HOPR node ticket management endpoints","name":"Tickets"},{"description":"HOPR node message manipulation endpoints","name":"Messages"},{"description":"HOPR node chain channels manipulation endpoints","name":"Channels"},{"description":"HOPR node peer manipulation endpoints","name":"Peers"}]}